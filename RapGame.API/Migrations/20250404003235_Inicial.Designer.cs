// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RapGame.Data;

#nullable disable

namespace RapGame.API.Migrations
{
    [DbContext(typeof(RapGameDbContext))]
    [Migration("20250404003235_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RapGame.Models.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AlbumDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FaixaMaisPopular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantidadeFaixas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Albuns");
                });

            modelBuilder.Entity("RapGame.Models.AlbumArtista", b =>
                {
                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.HasKey("AlbumId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("AlbumArtistas");
                });

            modelBuilder.Entity("RapGame.Models.AlbumParticipacao", b =>
                {
                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistaId")
                        .HasColumnType("int");

                    b.HasKey("AlbumId", "ArtistaId");

                    b.HasIndex("ArtistaId");

                    b.ToTable("AlbumParticipacao");
                });

            modelBuilder.Entity("RapGame.Models.Artista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artistas");
                });

            modelBuilder.Entity("RapGame.Models.AlbumArtista", b =>
                {
                    b.HasOne("RapGame.Models.Album", "Album")
                        .WithMany("AlbumArtistas")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RapGame.Models.Artista", "Artista")
                        .WithMany("AlbumArtistas")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Artista");
                });

            modelBuilder.Entity("RapGame.Models.AlbumParticipacao", b =>
                {
                    b.HasOne("RapGame.Models.Album", "Album")
                        .WithMany("Participacoes")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RapGame.Models.Artista", "Artista")
                        .WithMany("Participacoes")
                        .HasForeignKey("ArtistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Artista");
                });

            modelBuilder.Entity("RapGame.Models.Album", b =>
                {
                    b.Navigation("AlbumArtistas");

                    b.Navigation("Participacoes");
                });

            modelBuilder.Entity("RapGame.Models.Artista", b =>
                {
                    b.Navigation("AlbumArtistas");

                    b.Navigation("Participacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
